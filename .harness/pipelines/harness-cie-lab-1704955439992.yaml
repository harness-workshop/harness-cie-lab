pipeline:
  identifier: Build_harness_cie_lab_1704955474385
  name: Build harness-cie-lab
  orgIdentifier: marriottworkshop61org
  projectIdentifier: sjath769
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.workshopgithub
        repoName: harness-cie-lab
  stages:
    - stage:
        identifier: build
        name: Build and Push
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: RunTests
                  name: Run Tests
                  identifier: RunTests_1
                  spec:
                    connectorRef: account.bootcampdockerhub
                    image: nikpap/mvn-openjdk-8:harness
                    language: Java
                    buildTool: Maven
                    args: test
                    packages: com.nikp
                    runOnlySelectedTests: true
                    preCommand: cd payment-service
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    resources:
                      limits:
                        memory: 2Gi
                        cpu: "2"
                    enableTestSplitting: false
              - step:
                  type: Run
                  name: Run
                  identifier: Run_1
                  spec:
                    connectorRef: account.bootcampdockerhub
                    image: nikpap/mvn-openjdk-8:harness
                    shell: Sh
                    command: |-
                      cd payment-service
                      mvn -Dmaven.test.skip=true clean install -X
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
              - step:
                  name: Fortify
                  identifier: fortify
                  template:
                    templateRef: account.fortify_scan
                    versionLabel: v0.1
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Push to DockerHub
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: account.bootcampdockerhub
                    repo: nikpap/payment-service-workshop
                    tags:
                      - sjath769-latest
                    optimize: true
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
              - step:
                  name: OWASP
                  identifier: OWASP
                  template:
                    templateRef: account.OWASP
                    versionLabel: "0.01"
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.bootcampgkecluster
              namespace: payment-service-build
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          caching:
            enabled: false
            paths: []
          slsa_provenance:
            enabled: false
        type: CI
        description: ""
    - stage:
        name: Deploy to Dev
        identifier: Deploy_to_Dev
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: paymentservice
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: templates
                        type: K8sManifest
                        spec:
                          valuesPaths: <+input>
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: org.dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: k8s
          execution:
            steps:
              - step:
                  type: HarnessApproval
                  name: HarnessApproval
                  identifier: HarnessApproval
                  spec:
                    approvalMessage: Please review the following information and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    isAutoRejectEnabled: false
                    approvers:
                      userGroups:
                        - _project_all_users
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
                  timeout: 1d
              - step:
                  type: Policy
                  name: Policy - No Critical CVEs
                  identifier: Policy_No_Critical_CVEs
                  spec:
                    policySets:
                      - Criticals Now Allowed
                    type: Custom
                    policySpec:
                      payload: "{\"JAVA_OSS_CRITICAL_COUNT\": <variable>}"
                  timeout: 10m
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                          skipDryRun: false
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  variables:
    - name: seusername
      type: String
      description: ""
      required: false
      value: <+input>
    - name: clientkey
      type: String
      description: ""
      required: false
      value: ca6b650e-1bed-4f8f-8eed-f637a4fd82f0
